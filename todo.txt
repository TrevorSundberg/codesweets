DONE - Lets get this code running in a browser
DONE - Make it work with optimizations
DONE - Maybe just try actually exporting the var and then at the bottom of the script we do the default export?
DONE - Get wepback to export typescript types file along with js (sweet pack)
DONE - Setup a react page where we can see the json schema UI for one component
DONE - Run all the build tasks in parallel
DONE - I want to abuse the array UI beacuse it has everything (nesting, etc)
DONE - Components register themselves rather than us relying on scanning exports
DONE - Schema generator doesn't recursively pull in definitions
DONE - Fix / patch memfs to not warn and not have the process issue
DONE - Make components addable/removable
DONE - Make certain components hidden (not addable)

Fix buttons / style / theme (make it reasonable)

Submitting should run the components

Custom UI for the components dropdown that lists all components from a database and loads them upon clicking

Remove webpack size limitation warnings (at least in sweetpack)

Remove the USER/PASS stuff

Make a schema we can validate for TaskSaved

Need to get the database working so we can detect all exported classes
 - Or we just have users enter the names of the components into a database... easier!
 - With the way we're doing dependencies we don't really need to know the inputs/outputs or even schema
 - Because we're going to actually build the object live
 - The only thing is being able to import the javascript files on the fly
 - We can just make a premade list of the files for now


Source mapping is probably messed up by my additions, see if we can make a webpack plugin to do it properly

Find a way to make it an error if you include another sweet packed file directly (not imported)

Make sure we can declare external libraries with the sweet packer (basically just other components)

We can't easily pack everything up, but we can declare externals
 - So we can have multiple builds
 - We can add import lines ourselves
 - We can export default in the header

Setup webpack with React - https://www.valentinog.com/blog/babel/
Get React JSX working with TypeScript
Building with a build server (Travis CI)
